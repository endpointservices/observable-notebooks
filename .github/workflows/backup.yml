name: backups
on:
  repository_dispatch:
    types: [new_notebook_version]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: backup
        run: |
          set -euo pipefail  
          # The URL is the notebook source, e.g. https://observablehq.com/@tomlarkworthy/github-backups 
          URL="${{github.event.client_payload.url}}"
          # We convert this to @tomlarkworthy/github-backups by striping the prefix
          path="${URL/https:\/\/observablehq.com\//}"
          
          echo 'url:     ${{github.event.client_payload.url}}'
          echo 'title:   ${{github.event.client_payload.title}}'
          echo 'author:  ${{github.event.client_payload.author}}'
          echo 'id:      ${{github.event.client_payload.id}}'
          # NOTE: api_key parameter not printed for security reasons, but it may be present
          # Download tar from Observable directly (do not echo, may contain API key)
          curl 'https://api.observablehq.com/${path}.tgz?v=3&api_key=${{github.event.client_payload.api_key}}' > notebook.tgz
          
          # Turn on echo of commands now
          set -x

          rm -rf "${path}"
          mkdir -p "${path}"
          tar -xf notebook.tgz -C "${path}"
          git config --global user.name 'backup-to-github'
          git config --global user.email 'robot@webcode.run'
          git add "${path}"
          git pull
          if ! git diff-index --quiet HEAD; then
            git commit -m 'Backup ${{github.event.client_payload.url}}   
            url:     ${{github.event.client_payload.url}}
            title:   ${{github.event.client_payload.title}}
            author:  ${{github.event.client_payload.author}}
            id:      ${{github.event.client_payload.id}}
            '
            git push
          fi
