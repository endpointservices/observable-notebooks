[{"title":"Flight Information Regions","description":"Introduction Flight Information Regions (FIR) are the largest regular division of airspace in use in the world today. In theory, every portion of the atmosphere belongs to a specific FIR. Smaller countries‚Äô airspace is encompassed by a single FIR; larger countries‚Äô airspace is subdivided into a number of regional FIRs. Some FIRs encompass the territorial airspace of several countries, e.g. in Oceania, West Africa or in the Caribbean sea. Oceanic airspace is divided into Oceanic Information Regions and deleg"},{"title":"Plot Cheatsheets","description":"An interactive overview and reference for Observable Plot Observable Plot is a robust JavaScript library to help you quickly visualize tabular data. These cheatsheets provide an interactive reference and printable PDF to explore each of the foundational concepts of the library: Marks, Scales, Transforms, Layout, and Colors. Marks Geometric symbols that represent your data For more interactive examples, see the Marks cheatsheet. Scales Project from data values to pixel values For more interactive examples, s"},{"title":"Vector Mark / Observable Plot","description":"The vector mark represents data as little arrows, typically positioned in x and y quantitative dimensions, with a given magnitude (length) and direction (rotate), as in a vector field. For example, the plot below shows the wind speed and direction for a section of western Europe. (Based on a LitVis example.) Per Remote Sensing Systems documentation: Standard U and V coordinates apply, meaning the positive U is to the right and positive V is above the axis. U and V are relative to true north. CCMP winds are"},{"title":"Convert Image to One Bit","description":"A tool for converting an image to a version with only black-and-white pixels by using one of several dithering methods implemented by Job van der Zwan"},{"title":"Give a user a persistent personal key for a notebook","description":"Simon Willison writes: Sadly there‚Äôs no good official answer. If you use Secrets you can‚Äôt publish the notebook or share it outside a paid team, and even in a team it uses the same Secret for everyone. There‚Äôs no notion of persistent-but-personal notebook state. You‚Äôd have to set up your own proxy to avoid exposing the key (see Tom Larkworthy‚Äôs work). I would love for there to be a better official answer; you can upvote Simon‚Äôs issue. For now, here‚Äôs a pattern you can use to give someone a personalized and"},{"title":"Differences between html and htl.html","description":"Hypertext Literal (accessed with `htl.html`) is intended as an eventual replacement for the `html` tagged template literal. It is already used by the HTML cell mode. It is stricter, safer, and offers some new capabilities like attaching event listener functions inline. In these side-by-side examples, the code inside the backticks is identical, but the first uses `html` and the second uses `htl.html`. See also Differences between htl.html and htl.html.fragment. Interpolated strings are escaped Null is not re"},{"title":"WEBCode.run Private Endpoints Released","description":"WEBCode.run is growing! We have added our first paid feature which will help support it long term. WEBCode is bootstrapped so this is a big milestone! For those that do not know, WEBCode.run allows you to run serverless compute workloads from within Observable notebooks. Until now, notebooks containing WEBCode.run handlers had to be public so that WEBCode's compute layer could read the code. Not anymore! We have added a new feature for Observable Team accounts that allows public access to serverless endpoin"},{"title":"Plot of plots","description":"With Plot.image we can create small multiples charts (or ‚Äúcollections of maps‚Äù, as Bertin writes), in which we make a parameter vary along the x and y axes."},{"title":"D3 Gallery Index","description":"D3 Gallery does not expose the raw data of its notebook listings. This notebook demonstrates a workaround to obtain them anyway. To create your own listings, import the data via Data On import we replace `previews()` with our own function `attach()` that only returns an empty DOM node with the data attached. We can then iterate over the rendered category contents to obtain the node and its data."},{"title":"Interactive Regl Wind Demo","description":"Inspired by this example and data source to create an interactive 3D globe version of the animation. Main Loop This loop is in charge of ultimately drawing the globe and responding to interactions. It consists of a regl-camera instance that wraps the `drawGlobe` regl function. Particle Screen Texture The first layer of textures is the \"particle screen\", which keeps track of where particles have been, switching between two buffers to slightly reduce opacity until the paths disappear. Particle Texture The par"},{"title":"Time series topological subsampling","description":"Using topological data analysis (TDA), we can extract meaningful points from a time series. This can be used to simplify a line (to take it from millions of points to a few hundreds), or to add some labels to a chart, highlighting ‚Äúimportant‚Äù points such as relative extrema. The approach is inspired by (my reading of) Paul Rosen (et al.)‚Äôs ‚ÄúLineSmooth: An Analytical Framework for Evaluating the Effectiveness of Smoothing Techniques on Line Charts‚Äù (PDF) and ‚ÄúTopoLines: Topological Smoothing for Line Charts‚Äù"},{"title":"Hello Bertin.js","description":"bertin.js is an easy to use wrapper around d3js to facilitate the process of making thematic maps. The principle is to work with layers stacked on each other. As in a GIS, the layers that are displayed above are placed at the top in the code, the layers that are displayed below are placed at the bottom in the code. The layers that can be displayed are of several types: header, footer, graticule, outline, choro, typo, prop, shadow, scalebar, text... Each type has its own parameters. This list will be complet"},{"title":"Plot Animation","description":"Observable Plot plus your creativity equals boundless possibilities and lots of awesome results. This animation can be embedded into your notebooks as a banner or whatever you like.üëá Then, use the code snippet below to bring it alive: API Reference scene(height, theme) height - the height of the scene; defaults to 500px. theme - \"Day\", \"Sunset\" or \"Twilight\". start() - Starts the animation. dispose() - Cancels the animation frame. This method must be called when the cell is re-evaluated."},{"title":"Clifford and de Jong Attractors","description":"This notebook interactively implements the discrete attractors of Clifford Pickover and Peter de Jong. You can pan and zoom using the mouse or a touch screen. Clifford attractors are defined by while de Jong attractors are defined by A grid of points is offset randomly and iterated some fixed numbers of times, after which the points are accumulated onto a WebGL texture, effectively computing a histogram of the attractor. Since single precision isn't adequate, you can switch to CPU mode for a final render‚Äîif"},{"title":"Genuary 2022 / 5","description":"Destroy a square."},{"title":"Sampling mood","description":"In a recent email to some friends, I tried to illustrate how, when daily volatility in mood is greater than monthly volatility, the sense you‚Äôll get of ‚Äúhow someone‚Äôs doing‚Äù is very sensitive to when you happen to check in. Like, suppose I have some pretty good baseline, generally improving. But then there‚Äôs day-to-day variation. A terrible meeting, a bad project, a breakthrough, a high compliment, a memorable night out. But I forget about it fast. In my experience, my mood varies way more between a good da"},{"title":"Crossfilter input","description":"This notebook provides a library for doing quick cross-filtering of datasets. It's inspired by the `Inputs.search` input from the Inputs library, as a quick way to give interactive control. You can use it like so: The default version (as you see) will try to automatically configure the filter input based on the columns in the dataset. However, this may or may not be exactly what you want, so `filters` takes a second argument where you can configure the filtered rows as you please. Available filter inputs Cu"},{"title":"White Noise vs Pachinko Tree Dithering","description":"A quick remix of Mike Bostock's Genuary 2022 / 2 entry to demonstrate the differences in dithering quality when using white noise vs the noise distribution of a pachinko quadtree. Sadly the latter is too slow to animate (at least as implemented in JavaScript) Addendum: With some helpful suggestions from Fabian a limited form of animation is now supported: we render forty frames, then reuse them (shuffling the order every forty frames). So if you turn on the animations below it may start out choppy, but afte"},{"title":"Wall Drawing 87","description":"From Sol LeWitt's Wall Drawings at MASS MoCA. A square divided horizontally and vertically into four equal parts, each with lines and colors in four directions superimposed progressively. The original: Photograph of Sol LeWitt's Wall Drawing 87"}]